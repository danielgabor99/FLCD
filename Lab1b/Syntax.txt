program ::= "def" decllist ";"

decllist ::= declaration | declaration decllist

declaration ::= type IDENTIFIER

type1 ::= "bool" | "char" | "int" | "float"

arraydecl ::= type IDENTIFIER "[" nr "]"

cmpdstmt ::= "go" stmtlist "close"

stmtlist ::= stmt | stmt stmtlist

stmt ::= simplstmt | structstmt

simplstmt ::= assignstmt | iostmt

assignstmt ::= IDENTIFIER "->" expression

expression ::= expression "plus" | minus | times | modulo | divide

iostmt ::= "read" | "print"  IDENTIFIER 

structstmt ::= cmpdstmt | ifstmt | whilestmt | forstmt

ifstmt ::= "if" condition "go" stmt ["ELSE" stmt]

whilestmt ::= "while" condition "go" stmt

forstmt ::= "loop" assignstmt ";" codintion ";" ";" statement  

condition ::= expression RELATION expression

RELATION ::= "smaller" | "smallerequal" | "equal" | "biggerequal" | "bigger"